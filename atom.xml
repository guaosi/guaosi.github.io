<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>guaosi的博客</title>
  <icon>https://www.gravatar.com/avatar/5c7dda047d9c4447cd2aaebf6fcc87ec</icon>
  <subtitle>白茶清欢无别事，我在等风也等你</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.guaosi.com/"/>
  <updated>2019-02-21T02:19:19.434Z</updated>
  <id>https://www.guaosi.com/</id>
  
  <author>
    <name>guaosi</name>
    <email>guaosi@vip.qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用lnmp快速构建线上环境并搭建项目成功上线</title>
    <link href="https://www.guaosi.com/2018/12/18/environment-by-lnmp/"/>
    <id>https://www.guaosi.com/2018/12/18/environment-by-lnmp/</id>
    <published>2018-12-18T07:20:09.000Z</published>
    <updated>2019-02-21T02:19:19.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-前提"><a href="#1-前提" class="headerlink" title="1. 前提"></a>1. 前提</h1><p>本文适合:</p><p>1.已经在linux虚拟机上搭建过环境，可以正常访问的，但是没有搭建在真实服务器上。</p><p>2.需要有略微的<code>linux</code>基础。</p><p>3.有自己的小项目或者demo，如果没有，会<code>composer</code>安装框架也是可以的。</p><p>因为本文适合偷懒使用，如果没有丝毫搭建经验的，所以我建议最好是创建一台虚拟机，自己手动安装<code>nginx</code>,<code>php</code>,<code>MySQL</code>，让内网可以上线访问。有了相关的认识，再来看本文效果是最好的。</p><a id="more"></a><h1 id="2-起因"><a href="#2-起因" class="headerlink" title="2. 起因"></a>2. 起因</h1><p>当大家做好自己的项目或者是demo，都想放在服务器上线，这样其他人才能随时随地访问使用。但是新拿到一台服务器后，可是服务器里<code>nginx</code>,<code>php</code>,<code>mysql</code>这些必须环境都没有安装，去装的话又是很繁琐。<br>那么，有没有一种快速高效的办法，类似windows上的<code>phpstudy</code>一样的集成环境呢？答案是有的，比如<code>宝塔</code>，<code>lnmp</code>。这里，我们选择已经很成熟的<code>lnmp</code>的<code>1.5</code>版本来快速构建环境。</p><p>LNMP官网: <a href="https://lnmp.org" target="_blank" rel="noopener">LNMP</a></p><h1 id="3-配置域名"><a href="#3-配置域名" class="headerlink" title="3. 配置域名"></a>3. 配置域名</h1><h2 id="3-1-域名问题"><a href="#3-1-域名问题" class="headerlink" title="3.1.  域名问题"></a>3.1.  域名问题</h2><p>首先，我们要知道域名是什么？为什么域名可以知道我们服务器在哪里？甚至还可以知道最后要访问我们哪一个项目？</p><h3 id="3-1-1-域名是什么？"><a href="#3-1-1-域名是什么？" class="headerlink" title="3.1.1. 域名是什么？"></a>3.1.1. 域名是什么？</h3><p>百度上有相关的定义，我这里就不阐述了，直接举个例子吧。比如，我在万网或者腾讯云上购买了一个域名，这个域名可以是<code>guaosi.com</code>，<code>guaosi.cn</code>或者<code>guaosi.top</code>，这些域名都称之为一级域名。然后我买了<code>guaosi.com</code>这个域名，那么，我就可以随心所欲在这个域名旗下生成我想要的域名了。给项目1的域名是<code>www.guaosi.com</code>,项目2的域名是<code>test.guaosi.com</code>。这些称之为二级域名，甚至还可以创建三级域名，四级域名，这些域名都是归于<code>guaosi.com</code>旗下的，不需要购买。</p><h3 id="3-1-2-域名如何知道我们服务器在哪里"><a href="#3-1-2-域名如何知道我们服务器在哪里" class="headerlink" title="3.1.2. 域名如何知道我们服务器在哪里"></a>3.1.2. 域名如何知道我们服务器在哪里</h3><p>以腾讯云的域名系统为例。已经购买了腾讯云的域名后，找到<code>域名与网站</code>-<code>云解析</code>-<code>域名解析列表</code>-<code>解析</code>。点击<code>添加记录</code>添加想要的域名，比如我想添加<code>www.guaosi.com</code>。那么，在<code>主机记录</code>填写<code>www</code>，<code>记录值</code>填写服务器的地址,然后保存即可。</p><p><img src="/assets/blogImg/tencent-domain-name.png" alt="腾讯云域名配置"></p><p>现在如果一个用户在电脑上访问了我的<code>www.guaosi.com</code>域名，首先，电脑上会先查看自己本地的Hosts文件里是否有做了关于<code>www.guaosi.com</code>的重定向，如果没有，那么电脑再访问由宽带运营商规定DNS(域名解析)服务器，查到<code>www.guaosi.com</code>的服务器地址为<code>xx.xx.xx.xx</code>，然后此时将请求发往IP为<code>xx.xx.xx.xx</code>的服务器上。最后，具体是访问到这台服务器上的哪个项目，哪个文件，我们下面再说。</p><h2 id="3-2-没有服务器或者域名"><a href="#3-2-没有服务器或者域名" class="headerlink" title="3.2. 没有服务器或者域名"></a>3.2. 没有服务器或者域名</h2><p>由上文的 <code>域名如何知道我们服务器在哪里</code> ，里面提及到，电脑上是先查看自己本地的Hosts文件里是否有做了关于<code>www.guaosi.com</code>的重定向，如果没有，电脑才访问由宽带运营商规定DNS(域名解析)服务器。所以，我们可以修改Hosts文件来假装自己已经拥有了自己的域名。</p><p>编辑hosts文件，加入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">环境地址       <span class="selector-tag">www</span><span class="selector-class">.guaosi</span><span class="selector-class">.com</span></span><br><span class="line"></span><br><span class="line"># 比如我虚拟机环境地址是192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.101</span></span><br><span class="line">192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.101</span>  <span class="selector-tag">www</span><span class="selector-class">.guaosi</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure><h2 id="3-3-拥有自己的服务器以及域名"><a href="#3-3-拥有自己的服务器以及域名" class="headerlink" title="3.3. 拥有自己的服务器以及域名"></a>3.3. 拥有自己的服务器以及域名</h2><p>通过上文的 <code>域名如何知道我们服务器在哪里</code> ，进行配置即可。</p><h1 id="4-安装LNMP"><a href="#4-安装LNMP" class="headerlink" title="4. 安装LNMP"></a>4. 安装LNMP</h1><p>根据官网的步骤安装即可，因为是一键包而且官网已经说得很详细了，我就不复现了。</p><p>建议安装MySQL8和PHP7.26版本，不要忘记设置的MySQL密码，并且密码的加密方式最好选择<code>mysql_native_password</code>。</p><p>LNMP安装: <a href="https://lnmp.org/install.html" target="_blank" rel="noopener">LNMP安装</a></p><p>安装完毕后，默认是root账户只能在本服务器上被访问，外界访问不到，可以进到mysql客户端里进行修改。</p><p>LNMP相关软件目录及文件位置 : <a href="https://lnmp.org/faq/lnmp-software-list.html" target="_blank" rel="noopener">LNMP相关软件目录及文件位置</a></p><p><code>my.ini</code>位置: <code>/etc/my.cnf</code></p><p><code>php.ini</code>位置: <code>/usr/local/php/etc/php.ini</code></p><p><code>vhost</code>位置: <code>/usr/local/nginx/conf/vhost</code></p><h1 id="5-配置虚拟站点"><a href="#5-配置虚拟站点" class="headerlink" title="5. 配置虚拟站点"></a>5. 配置虚拟站点</h1><h2 id="5-1-添加虚拟站点"><a href="#5-1-添加虚拟站点" class="headerlink" title="5.1. 添加虚拟站点"></a>5.1. 添加虚拟站点</h2><p>输入命令，新建虚拟站点<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost <span class="keyword">add</span><span class="bash"></span></span><br></pre></td></tr></table></figure></p><p>之后的选择，可以参考如下:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">1.Please enter domain(example: www.lnmp.org)</span><br><span class="line">输入想要创建的域名。比如  www.guaosi.com  回车</span><br><span class="line"></span><br><span class="line">2.Enter more domain name(example: lnmp.org *.lnmp.org)</span><br><span class="line">输入更多域名。没有必要，回车</span><br><span class="line"></span><br><span class="line">3.Default directory: /home/wwwroot/www.guaosi.com:</span><br><span class="line">项目存放的目录。默认即可，回车</span><br><span class="line"></span><br><span class="line">4.Allow Rewrite rule? (y/n)</span><br><span class="line">vhost里的配置规则。默认即可，回车</span><br><span class="line"></span><br><span class="line">5.<span class="builtin-name">Enable</span> PHP Pathinfo? (y/n)</span><br><span class="line">是否添加PHP Pathinfo。默认即可，回车</span><br><span class="line"></span><br><span class="line">6.Allow access log? (y/n)</span><br><span class="line">是否开启访问日志。默认即可，回车</span><br><span class="line"></span><br><span class="line">7. Multiple PHP version found, Please select the PHP version.</span><br><span class="line">选择运行该项目的php版本，回车</span><br><span class="line"></span><br><span class="line">8. Create database <span class="keyword">and</span> MySQL<span class="built_in"> user </span>with same name</span><br><span class="line">是否在mysql里创建当前项目专用的数据库与账户。这步可以选择 n 跳过,但是为了安全起见，最好是一个项目存放一个数据库以及配置专用的MySQL账号密码，所以我这里选择y，回车</span><br><span class="line"></span><br><span class="line">9. Enter current root password of Database (Password will <span class="keyword">not</span> shown):</span><br><span class="line">请输入当前mysql的root密码。输入完毕后，回车</span><br><span class="line"></span><br><span class="line">10.Enter database name:</span><br><span class="line">输入新建数据库的名称。输入完毕后，回车</span><br><span class="line"></span><br><span class="line">11.Please enter password <span class="keyword">for</span> mysql user</span><br><span class="line">为新建的mysql账户设置密码。输入完毕后，回车</span><br><span class="line"></span><br><span class="line">12.<span class="builtin-name">Add</span> SSL Certificate</span><br><span class="line">是否添加SSL证书。现在SSL证书都是可以免费拿到，比如腾讯云，阿里云的域名都可以免费申请，我们这边直接n跳过，自己来配置SSL证书</span><br><span class="line"></span><br><span class="line">13.Press any key <span class="keyword">to</span> start create virtul host.</span><br><span class="line">直接回车，添加新的虚拟站点成功</span><br></pre></td></tr></table></figure></p><p>成功后，会生成对应的项目目录 <code>/home/wwwroot/www.guaosi.com</code> ，成生成nginx关于这个项目的虚拟站点配置文件<code>/usr/local/nginx/conf/vhost/www.guaosi.com.conf</code></p><h2 id="5-2-修改vhost配置文件"><a href="#5-2-修改vhost配置文件" class="headerlink" title="5.2. 修改vhost配置文件"></a>5.2. 修改vhost配置文件</h2><p>输入<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/vhost/www<span class="selector-class">.guaosi</span><span class="selector-class">.com</span><span class="selector-class">.conf</span></span><br></pre></td></tr></table></figure></p><p>将 <code>root</code> 指向的地址，进行修改，将原来的<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root  /home/wwwroot/www<span class="selector-class">.guaosi</span><span class="selector-class">.com</span>/</span><br></pre></td></tr></table></figure></p><p>修改为项目入口地址所在目录。<br>如果是yii2项目，修改为<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root  /home/wwwroot/www<span class="selector-class">.guaosi</span><span class="selector-class">.com</span>/web</span><br></pre></td></tr></table></figure></p><p>如果是laravel或者tp5项目，修改为<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root  <span class="regexp">/home/</span>wwwroot<span class="regexp">/www.guaosi.com/</span><span class="keyword">public</span></span><br></pre></td></tr></table></figure></p><h1 id="6-测试项目上线"><a href="#6-测试项目上线" class="headerlink" title="6. 测试项目上线"></a>6. 测试项目上线</h1><h2 id="6-1-将项目放入线上"><a href="#6-1-将项目放入线上" class="headerlink" title="6.1. 将项目放入线上"></a>6.1. 将项目放入线上</h2><p>将自己已经完成的项目或者demo，放到服务器的项目目录下(比如<code>home/wwwroot/www.guaosi.com/</code>)。</p><p>以下提供四种方式，<code>推荐使用git</code>，因为git有版本控制，可以回退版本以及分支开发，团队合作，是现在的主流趋势，是每个程序猿必须掌握的。</p><h3 id="6-1-1-composer"><a href="#6-1-1-composer" class="headerlink" title="6.1.1. composer"></a>6.1.1. composer</h3><p>如果没有可以放的项目或者demo，可以直接composer下载thinkphp5或者laravel到项目目录下，可以通过域名成功访问到即代表成功.</p><h3 id="6-1-2-FTP上传"><a href="#6-1-2-FTP上传" class="headerlink" title="6.1.2. FTP上传"></a>6.1.2. FTP上传</h3><p>需要服务器开了FTP的21端口或者sftp的22端口.建议把自己的项目打包成zip，然后通过ftp工具上传到项目目录，然后解压。工具推荐<code>winscp</code>,<code>FlashFXP</code>。</p><h3 id="6-1-3-git"><a href="#6-1-3-git" class="headerlink" title="6.1.3. git"></a>6.1.3. git</h3><p>需要有git的使用基础，如果还不会git或者对git有兴趣，可以查查廖大神的git教程。<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">点我查看git教程</a></p><p>已经将项目上传至<code>github</code>或者<code>gitee</code>这样的远程仓库，然后在项目目录下<code>git clone</code>自己的项目下来即可。（如果是laravel或者tp5项目，记得<code>composer update</code>,laravel记得修改<code>.env</code>文件）</p><h3 id="6-1-4-其他"><a href="#6-1-4-其他" class="headerlink" title="6.1.4. 其他"></a>6.1.4. 其他</h3><p>如果服务器已经做过ssh免密码登陆。那么可以把项目打包成zip，然后通过scp<br>进行上传<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将本地的 /Users/guaosi/Documents/www.guaosi.com.zip 的文件复制到ip为192.168.120.204的服务器上的</span></span><br><span class="line">scp /Users/guaosi/Documents/www.guaosi.com.zip  root<span class="variable">@192</span>.<span class="number">168.120</span>.<span class="number">204</span><span class="symbol">:/home/wwwroot/www</span>.guaosi.com</span><br><span class="line"><span class="comment"># 最后记得解压</span></span><br></pre></td></tr></table></figure></p><p>如果是从服务器上复制文件到本地<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从ip为192.168.120.204的服务器上，通过root登录，然后复制 /opt/soft/ 下的nginx-0.5.38.tar.gz 文件 到 本地的 /Users/guaosi/Documents 目录下</span></span><br><span class="line">scp root<span class="variable">@192</span>.<span class="number">168.120</span>.<span class="number">204</span><span class="symbol">:/opt/soft/nginx-</span><span class="number">0</span>.<span class="number">5.38</span>.tar.gz /Users/guaosi/Documents</span><br></pre></td></tr></table></figure></p><h2 id="6-2-遇到的问题"><a href="#6-2-遇到的问题" class="headerlink" title="6.2. 遇到的问题"></a>6.2. 遇到的问题</h2><p>说几个在<code>lnmp</code>集成环境下部署遇到的问题。</p><h3 id="6-2-1-多站点白屏问题"><a href="#6-2-1-多站点白屏问题" class="headerlink" title="6.2.1. 多站点白屏问题"></a>6.2.1. 多站点白屏问题</h3><p>一个服务器其实是可以部署多个项目的。那么，回到之前欠下的问题<code>如何知道最后要访问我们哪一个项目？</code><br>通过上面的虚拟站点配置文件，我们可以知道，我们为域名为<code>www.guaosi.com</code>专门指定了访问目录root为<code>/home/wwwroot/www.guaosi.com/public</code>。这样，当用户访问<code>www.guaosi.com</code>的时候，他的电脑会先去DNS服务器查询到<code>www.guaosi.com</code>解析的服务器IP地址，然后访问到这台服务器。因为访问的是<code>www.guaosi.com</code>，那么，nginx后找到配置文件中站点为<code>www.guaosi.com</code>,找到它对应的root指向目录，进行访问。</p><p>lnmp多站点(多项目)部署的时候，tp5会出现项目白屏的问题，报500错误。这是因为我们在vhost配置中的root指向的是<code>public</code>，这样一来，访问网址就不需要加<code>public</code>了，可是因为lnmp设置了目录访问权限，无法访问上级目录，所以需要进行修改。</p><p>1.修改<code>fastcgi.conf</code>的配置<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="keyword">local</span>/nginx/<span class="keyword">conf</span>/fastcgi.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure></p><p>2.然后在最后一行加入<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_param PHP_ADMIN_VALUE $<span class="keyword">basedir </span>if_not_empty<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>3.保存退出</p><p>4.再修改<code>www.guaosi.com.conf</code>的配置</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/vhost/www<span class="selector-class">.guaosi</span><span class="selector-class">.com</span><span class="selector-class">.conf</span></span><br></pre></td></tr></table></figure><p>5.在<code>root</code>下面一行加入 <code>&quot;open_basedir=/home/wwwroot/www.guaosi.com/:/tmp/:/proc/&quot;;</code><br>完整配置参考<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="comment">#listen [::]:80;</span></span><br><span class="line">        <span class="attribute">server_name</span> www.guaosi.com ;</span><br><span class="line">        <span class="attribute">index</span> index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        <span class="comment"># yii2</span></span><br><span class="line">        <span class="comment"># root  /home/wwwroot/www.guaosi.com/web;</span></span><br><span class="line">        <span class="comment"># thinkphp5跟laravel5</span></span><br><span class="line">        <span class="attribute">root</span>  /home/wwwroot/www.guaosi.com/public;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">set</span> <span class="variable">$basedir</span> <span class="string">"open_basedir=/home/wwwroot/www.guaosi.com/:/tmp/:/proc/"</span>;</span><br><span class="line">        <span class="attribute">include</span> rewrite/none.conf;</span><br><span class="line">        <span class="comment">#error_page   404   /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Deny access to PHP files in specific directory</span></span><br><span class="line">        <span class="comment">#location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">include</span> enable-php.conf;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># yii2 nginx规则</span></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">         <span class="attribute">if</span> (!-e <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">           <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)</span> /index.php <span class="literal">last</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># thinkphp5 nginx规则</span></span><br><span class="line">         <span class="attribute">location</span> / &#123;</span><br><span class="line">          <span class="attribute">if</span> (!-e <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">                <span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span> /index.php?s=<span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line">          &#125;</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="comment"># laravel5 nginx规则</span></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line"><span class="regexp"></span>        &#123;</span><br><span class="line">            <span class="attribute">expires</span>      <span class="number">30d</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ .*\.(js|css)?$</span></span><br><span class="line"><span class="regexp"></span>        &#123;</span><br><span class="line">            <span class="attribute">expires</span>      <span class="number">12h</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ /.well-known</span> &#123;</span><br><span class="line">            <span class="attribute">allow</span> all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ /\.</span></span><br><span class="line"><span class="regexp"></span>        &#123;</span><br><span class="line">            <span class="attribute">deny</span> all;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">access_log</span>  /home/wwwlogs/www.guaosi.com.log;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><ol start="6"><li>保存退出</li><li><p>重启nginx</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">lnmp nginx restart</span></span><br></pre></td></tr></table></figure></li><li><p>测试访问 <code>http://www.guaosi.com</code> 看看是否正常吧</p></li></ol><h3 id="6-2-2-添加SSL证书-HTTPS"><a href="#6-2-2-添加SSL证书-HTTPS" class="headerlink" title="6.2.2. 添加SSL证书(HTTPS)"></a>6.2.2. 添加SSL证书(HTTPS)</h3><p>在阿里云或者腾讯云购买的域名，可以免费申请ssl证书.申请通过后，下载并且上传到服务器上，解压。</p><p>修改修改<code>www.guaosi.com.conf</code>的配置<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/vhost/www<span class="selector-class">.guaosi</span><span class="selector-class">.com</span><span class="selector-class">.conf</span></span><br></pre></td></tr></table></figure></p><p>在 <code>listen 80;</code>后面加入下面代码<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line"><span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">ssl_certificate</span> 证书存在位置;</span><br><span class="line"><span class="attribute">ssl_certificate_key</span> 证书存在位置;</span><br></pre></td></tr></table></figure></p><p>参考案例<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">server</span></span><br><span class="line">    &#123;</span><br><span class="line">        listen <span class="number">80</span>;</span><br><span class="line">        listen <span class="number">443</span> ssl;</span><br><span class="line">        ssl on;</span><br><span class="line">        ssl_certificate /usr/cert/www/ssl.crt;</span><br><span class="line">        ssl_certificate_key /usr/cert/www/ssl.key;</span><br><span class="line">        <span class="meta">#listen [::]:80;</span></span><br><span class="line">        server_name www.guaosi.com ;</span><br><span class="line">        <span class="keyword">index</span> <span class="keyword">index</span>.html <span class="keyword">index</span>.htm <span class="keyword">index</span>.php <span class="keyword">default</span>.html <span class="keyword">default</span>.htm <span class="keyword">default</span>.php;</span><br><span class="line">    ......</span><br></pre></td></tr></table></figure></p><h3 id="6-2-3-强制跳转HTTPS"><a href="#6-2-3-强制跳转HTTPS" class="headerlink" title="6.2.3. 强制跳转HTTPS"></a>6.2.3. 强制跳转HTTPS</h3><p>如果想http强制https，只要<code>让80端口的强制重定向https</code>即可。可以参考这样设置<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">#listen 80;</span></span><br><span class="line">        <span class="comment">#listen [::]:80;</span></span><br><span class="line">        <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">        <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line">        <span class="attribute">ssl_certificate</span> /usr/cert/cloud/ssl.crt;</span><br><span class="line">        <span class="attribute">ssl_certificate_key</span> /usr/cert/cloud/ssl.key;</span><br><span class="line">        <span class="attribute">server_name</span> cloud.guaosi.com ;</span><br><span class="line">        <span class="attribute">index</span> index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        <span class="attribute">root</span>  /home/wwwroot/cloud.guaosi.com/public;</span><br><span class="line">        <span class="attribute">set</span> <span class="variable">$basedir</span> <span class="string">"open_basedir=/home/wwwroot/cloud.guaosi.com/:/tmp/:/proc/"</span>;</span><br><span class="line">        <span class="attribute">include</span> rewrite/none.conf;</span><br><span class="line">        <span class="comment">#error_page   404   /404.html;</span></span><br><span class="line">        <span class="comment"># Deny access to PHP files in specific directory</span></span><br><span class="line">        <span class="comment">#location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">include</span> enable-php.conf;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">                <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$args</span>;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">    &#125;</span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span> cloud.guaosi.com ;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h3 id="6-2-4-无法删除项目"><a href="#6-2-4-无法删除项目" class="headerlink" title="6.2.4. 无法删除项目"></a>6.2.4. 无法删除项目</h3><p>因为LNMP 1.2开始PHP防跨目录限制使用<code>.user.ini</code>，该文件在网站根目录下，<code>.user.ini</code>文件无法直接修改。所以需要先解锁<code>.user.ini</code>文件。<br>执行下面的命令<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chattr -<span class="selector-tag">i</span> /home/wwwroot/www<span class="selector-class">.guaosi</span><span class="selector-class">.com</span>/<span class="selector-class">.user</span><span class="selector-class">.ini</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-前提&quot;&gt;&lt;a href=&quot;#1-前提&quot; class=&quot;headerlink&quot; title=&quot;1. 前提&quot;&gt;&lt;/a&gt;1. 前提&lt;/h1&gt;&lt;p&gt;本文适合:&lt;/p&gt;
&lt;p&gt;1.已经在linux虚拟机上搭建过环境，可以正常访问的，但是没有搭建在真实服务器上。&lt;/p&gt;
&lt;p&gt;2.需要有略微的&lt;code&gt;linux&lt;/code&gt;基础。&lt;/p&gt;
&lt;p&gt;3.有自己的小项目或者demo，如果没有，会&lt;code&gt;composer&lt;/code&gt;安装框架也是可以的。&lt;/p&gt;
&lt;p&gt;因为本文适合偷懒使用，如果没有丝毫搭建经验的，所以我建议最好是创建一台虚拟机，自己手动安装&lt;code&gt;nginx&lt;/code&gt;,&lt;code&gt;php&lt;/code&gt;,&lt;code&gt;MySQL&lt;/code&gt;，让内网可以上线访问。有了相关的认识，再来看本文效果是最好的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://www.guaosi.com/tags/php/"/>
    
      <category term="lnmp" scheme="https://www.guaosi.com/tags/lnmp/"/>
    
      <category term="服务器" scheme="https://www.guaosi.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>二维数组的巧妙整合</title>
    <link href="https://www.guaosi.com/2018/12/14/complex-two-dimensional-arrays/"/>
    <id>https://www.guaosi.com/2018/12/14/complex-two-dimensional-arrays/</id>
    <published>2018-12-14T06:58:15.000Z</published>
    <updated>2018-12-18T07:24:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-起因"><a href="#1-起因" class="headerlink" title="1. 起因"></a>1. 起因</h1><p>在工作中，经常会遇到多个多维数组或者orm对象数组需要整合的情况。通过整合好数据，然后输出给前端。</p><h1 id="2-数据"><a href="#2-数据" class="headerlink" title="2. 数据"></a>2. 数据</h1><p>比如现在，有2个orm对象，他们的表间关系存在不明显，互相没有做模型关联，但是id相同。</p><a id="more"></a><ol><li>$name_data对象数组(已转json格式，方便查看)</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_0"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_1"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_2"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_3"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_4"</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ol start="2"><li>$order_data对象数组(已转json格式，方便查看)</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">4</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">6</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">6</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">8</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">7</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">10</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">12</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>现在我想把这2个orm对象数组整合成一个数组，方便前端调用，想转成的数据结构如下所示（已转json格式，方便查看）<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"1"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_0"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"2"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_1"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"3"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_2"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"4"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_3"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">4</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"5"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_4"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">6</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"6"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">6</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"7"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">7</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"8"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">12</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="3-实现"><a href="#3-实现" class="headerlink" title="3. 实现"></a>3. 实现</h1><h2 id="3-1-想法一"><a href="#3-1-想法一" class="headerlink" title="3.1. 想法一"></a>3.1. 想法一</h2><p>脑子里一闪间的想法，2个数组整合成一个，并且根据id来区别。容易，做2个foreach循环就行了，判断id相同的，放到一个数组里就行了，于是可能会想到了下面的代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($name_data <span class="keyword">as</span> $val)&#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($order_data <span class="keyword">as</span> $v)&#123;</span><br><span class="line">        <span class="keyword">if</span>($v-&gt;id == $val-&gt;id)&#123;</span><br><span class="line">            $data[<span class="string">'id'</span>] = $v-&gt;id;</span><br><span class="line">            $data[<span class="string">'name'</span>] = $val-&gt;name;</span><br><span class="line">            $data[<span class="string">'order_count'</span>] = $v-&gt;order_count;</span><br><span class="line">            $users_info[]=$data;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行后的结果(已转json格式，方便查看)<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_1"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_2"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_3"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">4</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_4"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">6</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>很明显，这不是我们想要的结果。</p><h2 id="3-2-想法二"><a href="#3-2-想法二" class="headerlink" title="3.2. 想法二"></a>3.2. 想法二</h2><p>想法一的想法太武断，只考虑了2个ID相等的情况，没有考虑到不同，所以导致只做了一半的事情，答案不正确。再次经过考虑后，可能有了如下的代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($name_data <span class="keyword">as</span> $val)&#123;</span><br><span class="line">    $flag = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">foreach</span> ($order_data <span class="keyword">as</span> $v)&#123;</span><br><span class="line">        <span class="keyword">if</span>($v-&gt;id == $val-&gt;id)&#123;</span><br><span class="line">            $users_info[$v-&gt;id][<span class="string">'id'</span>] = $v-&gt;id;</span><br><span class="line">            $users_info[$v-&gt;id][<span class="string">'name'</span>] = $val-&gt;name;</span><br><span class="line">            $users_info[$v-&gt;id][<span class="string">'order_count'</span>] = $v-&gt;order_count;</span><br><span class="line">            $flag = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $users_info[$v-&gt;id][<span class="string">'id'</span>] = $v-&gt;id;</span><br><span class="line">            $users_info[$v-&gt;id][<span class="string">'order_count'</span>] = $v-&gt;order_count;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!$flag)&#123;</span><br><span class="line">        $users_info[$val-&gt;id][<span class="string">'id'</span>] = $val-&gt;id;</span><br><span class="line">        $users_info[$val-&gt;id][<span class="string">'name'</span>] = $val-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行过后的结果(已转json格式，方便查看)<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"1"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_0"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"2"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_1"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"3"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_2"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"4"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_3"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"5"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">6</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_4"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"6"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">6</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">8</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"7"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">7</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">10</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"8"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">12</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这次，跟我们想要的结果很接近了。其实，这样已经可以传给我们的前端，让前端自己去判断处理了。</p><h2 id="3-3-想法三"><a href="#3-3-想法三" class="headerlink" title="3.3. 想法三"></a>3.3. 想法三</h2><p>那有没有一种简单点的办法，既可以实现我们要的数据结果，又简单方便好理解呢？答案是有的，其实想法二已经体现出来了，就是活用php的数组特性，充分利用id来判断相同可以整合的数据，于是想法三就诞生了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($name_data <span class="keyword">as</span> $val)&#123;</span><br><span class="line">    $users_info[$val-&gt;id][<span class="string">'id'</span>] = $val-&gt;id;</span><br><span class="line">    $users_info[$val-&gt;id][<span class="string">'name'</span>] = $val-&gt;name;</span><br><span class="line">    $users_info[$val-&gt;id][<span class="string">'order_count'</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span> ($order_data <span class="keyword">as</span> $val)&#123;</span><br><span class="line">    $users_info[$val-&gt;id][<span class="string">'id'</span>] = $val-&gt;id;</span><br><span class="line">    $users_info[$val-&gt;id][<span class="string">'order_count'</span>] = $val-&gt;order_count;</span><br><span class="line">    $users_info[$val-&gt;id][<span class="string">'name'</span>] = $users_info[$val-&gt;id][<span class="string">'name'</span>]??<span class="string">''</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行过后的结果(已转json格式，方便查看)</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"1"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_0"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"2"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_1"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"3"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_2"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"4"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_3"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">4</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"5"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"std_name_4"</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">6</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"6"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">6</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"7"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">7</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"8"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="attr">"order_count"</span>: <span class="number">12</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h1><p>以上三种想法可以看出来，想法三具有以下三个特点:</p><ol><li>简单高效，想法一与想法二最大运行次数都是<code>m*n</code>次，然而想法三是<code>m+n</code>次，速度效率存在本质的区别。</li><li>可以实现我们想要的数据结构，并且相比想法二，减少了大量的逻辑代码。</li><li>活用php数组特性，利用id来区分以及整合数组，在我们的平时工作中，很经常会遇到类似相关的问题。</li></ol><p>虽然这里只是以两个对象数组为例，其实还可以更多应用到其他多维数组，多个数组整合之类的，灵活变通，类似问题都会迎刃而解。</p><h1 id="5-案例完整代码"><a href="#5-案例完整代码" class="headerlink" title="5. 案例完整代码"></a>5. 案例完整代码</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//制作名字与ID的对象数组</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">mockNameData</span><span class="params">($n)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $name_data = [];</span></span><br><span class="line"><span class="php">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span></span><br><span class="line"><span class="php">        $obj = <span class="keyword">new</span> \stdClass();</span></span><br><span class="line"><span class="php">        $obj-&gt;id = $i + <span class="number">1</span>;</span></span><br><span class="line"><span class="php">        $obj-&gt;name = <span class="string">'std_name_'</span> . $i;</span></span><br><span class="line"><span class="php">        $name_data[] = $obj;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> $name_data;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="comment">//制作订单数量与ID的对象数组</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">mockOrderData</span><span class="params">($n)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $order_data = [];</span></span><br><span class="line"><span class="php">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span></span><br><span class="line"><span class="php">        $obj = <span class="keyword">new</span> \stdClass();</span></span><br><span class="line"><span class="php">        $obj-&gt;id = $i + <span class="number">2</span>;</span></span><br><span class="line"><span class="php">        $obj-&gt;order_count = $i * <span class="number">2</span>;</span></span><br><span class="line"><span class="php">        $order_data[] = $obj;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> $order_data;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="comment">// 想法一</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">think1</span><span class="params">($name_data, $order_data)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $users_info = [];</span></span><br><span class="line"><span class="php">    <span class="keyword">foreach</span> ($name_data <span class="keyword">as</span> $val) &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">foreach</span> ($order_data <span class="keyword">as</span> $v) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> ($v-&gt;id == $val-&gt;id) &#123;</span></span><br><span class="line"><span class="php">                $data[<span class="string">'id'</span>] = $v-&gt;id;</span></span><br><span class="line"><span class="php">                $data[<span class="string">'name'</span>] = $val-&gt;name;</span></span><br><span class="line"><span class="php">                $data[<span class="string">'order_count'</span>] = $v-&gt;order_count;</span></span><br><span class="line"><span class="php">                $users_info[] = $data;</span></span><br><span class="line"><span class="php">                <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> $users_info;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="comment">//想法二</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">think2</span><span class="params">($name_data, $order_data)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $users_info = [];</span></span><br><span class="line"><span class="php">    <span class="keyword">foreach</span> ($name_data <span class="keyword">as</span> $val) &#123;</span></span><br><span class="line"><span class="php">        $flag = <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">foreach</span> ($order_data <span class="keyword">as</span> $v) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> ($v-&gt;id == $val-&gt;id) &#123;</span></span><br><span class="line"><span class="php">                $users_info[$v-&gt;id][<span class="string">'id'</span>] = $v-&gt;id;</span></span><br><span class="line"><span class="php">                $users_info[$v-&gt;id][<span class="string">'name'</span>] = $val-&gt;name;</span></span><br><span class="line"><span class="php">                $users_info[$v-&gt;id][<span class="string">'order_count'</span>] = $v-&gt;order_count;</span></span><br><span class="line"><span class="php">                $flag = <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">                $users_info[$v-&gt;id][<span class="string">'id'</span>] = $v-&gt;id;</span></span><br><span class="line"><span class="php">                $users_info[$v-&gt;id][<span class="string">'order_count'</span>] = $v-&gt;order_count;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (!$flag) &#123;</span></span><br><span class="line"><span class="php">            $users_info[$val-&gt;id][<span class="string">'id'</span>] = $val-&gt;id;</span></span><br><span class="line"><span class="php">            $users_info[$val-&gt;id][<span class="string">'name'</span>] = $val-&gt;name;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> $users_info;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="comment">//想法三</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">think3</span><span class="params">($name_data, $order_data)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $users_info = [];</span></span><br><span class="line"><span class="php">    <span class="keyword">foreach</span> ($name_data <span class="keyword">as</span> $val) &#123;</span></span><br><span class="line"><span class="php">        $users_info[$val-&gt;id][<span class="string">'id'</span>] = $val-&gt;id;</span></span><br><span class="line"><span class="php">        $users_info[$val-&gt;id][<span class="string">'name'</span>] = $val-&gt;name;</span></span><br><span class="line"><span class="php">        $users_info[$val-&gt;id][<span class="string">'order_count'</span>] = <span class="number">0</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">foreach</span> ($order_data <span class="keyword">as</span> $val) &#123;</span></span><br><span class="line"><span class="php">        $users_info[$val-&gt;id][<span class="string">'id'</span>] = $val-&gt;id;</span></span><br><span class="line"><span class="php">        $users_info[$val-&gt;id][<span class="string">'order_count'</span>] = $val-&gt;order_count;</span></span><br><span class="line"><span class="php">        $users_info[$val-&gt;id][<span class="string">'name'</span>] = $users_info[$val-&gt;id][<span class="string">'name'</span>] ?? <span class="string">''</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> $users_info;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">//设置虚拟数据的长度</span></span></span><br><span class="line"><span class="php">$n = <span class="number">5</span>;</span></span><br><span class="line"><span class="php"><span class="comment">//设置虚拟数据的长度</span></span></span><br><span class="line"><span class="php">$m = <span class="number">7</span>;</span></span><br><span class="line"><span class="php"><span class="comment">//制作名字与ID的对象数组</span></span></span><br><span class="line"><span class="php">$name_data = mockNameData($n);</span></span><br><span class="line"><span class="php"><span class="comment">////制作订单数量与ID的对象数组</span></span></span><br><span class="line"><span class="php">$order_data = mockOrderData($m);</span></span><br><span class="line"><span class="php"><span class="comment">//打印想法1</span></span></span><br><span class="line"><span class="php">print_r(think1($name_data, $order_data));</span></span><br><span class="line"><span class="php"><span class="comment">//打印想法2</span></span></span><br><span class="line"><span class="php">print_r(think2($name_data, $order_data));</span></span><br><span class="line"><span class="php"><span class="comment">//打印想法3</span></span></span><br><span class="line"><span class="php">print_r(think3($name_data, $order_data));</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-起因&quot;&gt;&lt;a href=&quot;#1-起因&quot; class=&quot;headerlink&quot; title=&quot;1. 起因&quot;&gt;&lt;/a&gt;1. 起因&lt;/h1&gt;&lt;p&gt;在工作中，经常会遇到多个多维数组或者orm对象数组需要整合的情况。通过整合好数据，然后输出给前端。&lt;/p&gt;
&lt;h1 id=&quot;2-数据&quot;&gt;&lt;a href=&quot;#2-数据&quot; class=&quot;headerlink&quot; title=&quot;2. 数据&quot;&gt;&lt;/a&gt;2. 数据&lt;/h1&gt;&lt;p&gt;比如现在，有2个orm对象，他们的表间关系存在不明显，互相没有做模型关联，但是id相同。&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://www.guaosi.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>git pull或git checkout 后保持权限不变</title>
    <link href="https://www.guaosi.com/2018/12/06/git-auto-change/"/>
    <id>https://www.guaosi.com/2018/12/06/git-auto-change/</id>
    <published>2018-12-06T08:43:14.000Z</published>
    <updated>2018-12-18T07:24:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-起因"><a href="#1-起因" class="headerlink" title="1. 起因"></a>1. 起因</h1><p>服务器上的项目,一般都是使用用户组<code>www-data</code>或者<code>www</code>来保证权限安全,不会使用<code>root</code>的。但是<code>git pull</code>下来的新文件或者修改的文件,则会把原有的文件的权限更改为644,用户组改为root。</p><a id="more"></a><p>如下图所示:<br><img src="/assets/blogImg/git-auto-change-demo.png" alt="docker-mascot"></p><h1 id="2-危害"><a href="#2-危害" class="headerlink" title="2. 危害"></a>2. 危害</h1><p>例如<code>日志文件</code>，<code>异步程序</code>,<code>定时任务</code>,<code>配置文件</code>之类的，由于最后运行用户的用户不对或者权限不够，可能会导致异常退出,文件无法读取,日志无法写入等等。所以,这个问题是值得引起我们重视的。</p><h1 id="3-解决办法"><a href="#3-解决办法" class="headerlink" title="3. 解决办法"></a>3. 解决办法</h1><h2 id="3-1-手动解决"><a href="#3-1-手动解决" class="headerlink" title="3.1. 手动解决"></a>3.1. 手动解决</h2><p>想法很简单，重新修改文件的权限。比如，回到站点上级目录，执行如下命令</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">chmod</span> -<span class="type">R</span> <span class="number">755</span> www.guaosi.com/</span><br><span class="line"><span class="meta"># 修改项目内所有文件为755权限</span></span><br><span class="line"><span class="title">chown</span> -<span class="type">R</span> www-<span class="class"><span class="keyword">data</span>:www-<span class="keyword">data</span> www.guaosi.com/</span></span><br><span class="line"><span class="meta"># 修改项目内所有文件的用户和用户组为www-data</span></span><br></pre></td></tr></table></figure><p>只要不嫌累，每次git pull 或者 git checkout . 后退回上级目录执行一次，还是可以舒舒服服解决这个问题的.</p><h2 id="3-2-git-hook函数"><a href="#3-2-git-hook函数" class="headerlink" title="3.2. git hook函数"></a>3.2. git hook函数</h2><p>接下来是这篇文章的重点了，我们可以使用git内置的钩子函数来解决这个问题.</p><p>先来看一下怎么操作:</p><h3 id="3-2-1-git-pull-操作"><a href="#3-2-1-git-pull-操作" class="headerlink" title="3.2.1. git pull 操作"></a>3.2.1. git pull 操作</h3><p>1.进入项目目录<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd www<span class="selector-class">.guaosi</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure></p><p>2.进入.git目录<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">.git/hooks/</span></span><br></pre></td></tr></table></figure></p><p>3.新建post-merge文件<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="built_in">post</span>-<span class="built_in">merge</span></span><br></pre></td></tr></table></figure></p><p>4.写入钩子内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"This is post-merge hook"</span></span><br><span class="line">chmod -R 755 ./* &amp;&amp; chown -R www-data:www-data ./*</span><br></pre></td></tr></table></figure></p><p>5.给予运行权限<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x <span class="built_in">post</span>-<span class="built_in">merge</span></span><br></pre></td></tr></table></figure></p><h3 id="3-2-2-git-checkout-操作"><a href="#3-2-2-git-checkout-操作" class="headerlink" title="3.2.2. git checkout 操作"></a>3.2.2. git checkout 操作</h3><p>1.进入项目目录<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd www<span class="selector-class">.guaosi</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure></p><p>2.进入.git目录<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">.git/hooks/</span></span><br></pre></td></tr></table></figure></p><p>3.新建post-checkout文件<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vim post-checkout</span></span><br></pre></td></tr></table></figure></p><p>4.写入钩子内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"This is post-checkout hook"</span></span><br><span class="line">chmod -R 755 ./* &amp;&amp; chown -R www-data:www-data ./*</span><br></pre></td></tr></table></figure></p><p>5.给予运行权限<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x <span class="built_in">post</span>-checkout</span><br></pre></td></tr></table></figure></p><h3 id="3-2-3-原理"><a href="#3-2-3-原理" class="headerlink" title="3.2.3. 原理"></a>3.2.3. 原理</h3><p>看了钩子内容应该大家都明白了，其实就是把手动运行的内容放入了钩子函数。在执行<code>git pull</code>命令时，会自动调用<code>post-merge</code>。在执行<code>git checkout</code>时,会自动调用<code>git checkout</code>.这样我们以后就不用再操心，怕遗忘权限有没有修改的问题了.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-起因&quot;&gt;&lt;a href=&quot;#1-起因&quot; class=&quot;headerlink&quot; title=&quot;1. 起因&quot;&gt;&lt;/a&gt;1. 起因&lt;/h1&gt;&lt;p&gt;服务器上的项目,一般都是使用用户组&lt;code&gt;www-data&lt;/code&gt;或者&lt;code&gt;www&lt;/code&gt;来保证权限安全,不会使用&lt;code&gt;root&lt;/code&gt;的。但是&lt;code&gt;git pull&lt;/code&gt;下来的新文件或者修改的文件,则会把原有的文件的权限更改为644,用户组改为root。&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://www.guaosi.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>docker常用基础</title>
    <link href="https://www.guaosi.com/2018/11/30/docker-basic/"/>
    <id>https://www.guaosi.com/2018/11/30/docker-basic/</id>
    <published>2018-11-30T03:39:18.000Z</published>
    <updated>2018-12-18T07:24:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-docker用来干什么"><a href="#1-docker用来干什么" class="headerlink" title="1. docker用来干什么"></a>1. docker用来干什么</h1><p>将做好的环境和代码，打包成镜像，可以让各个地方都可以直接使用，不再受到环境的限制。</p><h1 id="2-docker与虚拟机的区别"><a href="#2-docker与虚拟机的区别" class="headerlink" title="2. docker与虚拟机的区别"></a>2. docker与虚拟机的区别</h1><p>1.虚拟机是模拟整个操作系统，包括硬件部分<br>2.docker是使用linux容器，通过进程隔离，拥有自己的文件系统，不会跟宿主机产生错乱。<br>3.docker没有自己的内核，使用的是宿主机的内核。</p><a id="more"></a><p><img src="/assets/blogImg/docker-mascot.jpeg" alt="docker-mascot"></p><h1 id="3-docker三大要素"><a href="#3-docker三大要素" class="headerlink" title="3. docker三大要素"></a>3. docker三大要素</h1><ol><li>镜像</li><li>容器</li><li>仓库(用于云上存放镜像)<blockquote><p><a href="https://hub.docker.com" target="_blank" rel="noopener">https://hub.docker.com</a></p></blockquote></li></ol><p>镜像就是模板。镜像好比类，容器是对象实例。</p><h2 id="3-1-需要正确的理解仓库-镜像-容器这几个概念"><a href="#3-1-需要正确的理解仓库-镜像-容器这几个概念" class="headerlink" title="3.1. 需要正确的理解仓库/镜像/容器这几个概念"></a>3.1. 需要正确的理解仓库/镜像/容器这几个概念</h2><p>Docker本身是一个容器运行载体货称之为管理引擎。我们把应用程序和配置依赖打包好形成一个可交付的运行环境，这个打包好的运行环境就是image镜像文件。只有通过这个镜像文件才能生成docker容器。image文件可以看做是容器的模板。Docker根据image文件生成容器的实例。同一个image文件，可以生成多个同时运行的容器实例。</p><p>1.image文件生成的容器实例，本身也是一个文件，称之为镜像文件。<br>2.一个容器运行一种服务，当我们需要的时候，就可以通过docker客户端创建一个对应的运行实例，也就是我们的容器。<br>3.至于仓库，就是存放了一堆镜像的地方，我们可以把镜像发布到仓库中，需要的时候从仓库中拉下来就可以了。</p><h1 id="4-安装docker"><a href="#4-安装docker" class="headerlink" title="4. 安装docker"></a>4. 安装docker</h1><h2 id="4-1-在centos6上安装docker"><a href="#4-1-在centos6上安装docker" class="headerlink" title="4.1. 在centos6上安装docker"></a>4.1. 在centos6上安装docker</h2><p>至少要centos6.5以上。</p><p>1.yum install -y epel-release<br>2.yum install -y docker-io<br>3.安装后的配置文件: /etc/sysconfig/docker<br>4.启动Docker后台服务: service docker start<br>5.docker version验证</p><h2 id="4-2-在centos7上安装docker"><a href="#4-2-在centos7上安装docker" class="headerlink" title="4.2. 在centos7上安装docker"></a>4.2. 在centos7上安装docker</h2><p>官网安装教程:<br><a href="https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce</a><br>使用镜像仓库进行安装</p><p>1.安装gcc</p><blockquote><p>yum -y install gcc</p></blockquote><p>2.安装gcc-c++</p><blockquote><p>yum -y install gcc-c++</p></blockquote><p>3.卸载之前的docker(如果有装过)<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum remove docker <span class="string">\</span></span><br><span class="line">                  docker-client <span class="string">\</span></span><br><span class="line">                  docker-client-latest <span class="string">\</span></span><br><span class="line">                  docker-common <span class="string">\</span></span><br><span class="line">                  docker-latest <span class="string">\</span></span><br><span class="line">                  docker-latest-logrotate <span class="string">\</span></span><br><span class="line">                  docker-logrotate <span class="string">\</span></span><br><span class="line">                  docker-selinux <span class="string">\</span></span><br><span class="line">                  docker-engine-selinux <span class="string">\</span></span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure></p><p>4.安装需要的软件包</p><blockquote><p>yum install -y yum-utils device-mapper-persistent-data lvm2</p></blockquote><p>5.设置stable镜像仓库</p><blockquote><p>yum-config-manager –add-repo <a href="http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo" target="_blank" rel="noopener">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</a></p></blockquote><p>6.更新yum软件包索引</p><blockquote><p>yum makecache fast</p></blockquote><p>7.安装docker ce</p><blockquote><p>yum -y install docker-ce</p></blockquote><p>8.启动docker</p><blockquote><p>systemctl start docker </p></blockquote><p>9.测试</p><blockquote><p>docker version</p></blockquote><blockquote><p>docker run hello-world</p></blockquote><blockquote><p>docker images</p></blockquote><p>10.配置镜像加速</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -<span class="selector-tag">p</span> /etc/docker</span><br><span class="line"><span class="comment">// 配置加速服务器</span></span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>加速服务器</p><p>1.网易云<br>{“registry-mirrors”:[“<a href="http://hub-mirror.c.163.com&quot;]}" target="_blank" rel="noopener">http://hub-mirror.c.163.com&quot;]}</a></p><p>2.阿里云 (dev.alipay.com 里申请自己专属的线上hub)<br>{“registry-mirrors”:[“https://自己的专属hub.mirror.aliyuncs.com”]}</p><p>11.docker进程查看</p><blockquote><p>ps -ef|grep docker|grep -v grep</p></blockquote><p>12.卸载<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br><span class="line">sudo yum remove docker-ce</span><br><span class="line">sudo rm -rf /var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span></span></span><br></pre></td></tr></table></figure></p><h1 id="5-使用阿里云镜像仓库"><a href="#5-使用阿里云镜像仓库" class="headerlink" title="5. 使用阿里云镜像仓库"></a>5. 使用阿里云镜像仓库</h1><p>注册地址</p><blockquote><p><a href="https://dev.aliyun.com" target="_blank" rel="noopener">https://dev.aliyun.com</a></p></blockquote><h2 id="5-1-centos6-修改镜像仓库"><a href="#5-1-centos6-修改镜像仓库" class="headerlink" title="5.1. centos6 修改镜像仓库"></a>5.1. centos6 修改镜像仓库</h2><blockquote><p>vim /etc/sysconfig/docker</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">other_args</span>=<span class="string">"--registry-mirror=https://自己的专属hub.mirror.aliyuncs.com"</span></span><br></pre></td></tr></table></figure><h2 id="5-2-centos7-修改镜像仓库"><a href="#5-2-centos7-修改镜像仓库" class="headerlink" title="5.2. centos7 修改镜像仓库"></a>5.2. centos7 修改镜像仓库</h2><blockquote><p>vim /etc/docker/daemon.json</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"registry-mirrors"</span>:[<span class="string">"https://自己的专属hub.mirror.aliyuncs.com"</span>]&#125;</span><br></pre></td></tr></table></figure><h1 id="6-docker的命令"><a href="#6-docker的命令" class="headerlink" title="6. docker的命令"></a>6. docker的命令</h1><h2 id="6-1-docker帮助命令"><a href="#6-1-docker帮助命令" class="headerlink" title="6.1. docker帮助命令"></a>6.1. docker帮助命令</h2><blockquote><p>docker version</p></blockquote><p>查看docker基础信息，版本号等等</p><blockquote><p>docker info</p></blockquote><p>查看docker详细信息，容器数量，内存等等</p><blockquote><p>docker –help</p></blockquote><p>查看docker命令</p><h2 id="6-2-docker镜像命令"><a href="#6-2-docker镜像命令" class="headerlink" title="6.2. docker镜像命令"></a>6.2. docker镜像命令</h2><h3 id="6-2-1-docker-iamges"><a href="#6-2-1-docker-iamges" class="headerlink" title="6.2.1. docker iamges"></a>6.2.1. docker iamges</h3><blockquote><p>docker images </p></blockquote><p>列出本地主机上的镜像</p><blockquote><p>docker images -a</p></blockquote><p>列出本地主机上的镜像(包括中间映象层)</p><blockquote><p>docker images -q</p></blockquote><p>列出本地主机上的所有镜像，而只显示Image ID的值</p><blockquote><p>docker images -qa</p></blockquote><p>a 加 q 的结合,列出本地主机上的镜像(包括中间映象层),而只显示Image ID的值</p><blockquote><p>docker images –digests</p></blockquote><p>显示镜像的摘要信息(DIGEST)</p><blockquote><p>docker iamges –no-trunc</p></blockquote><p>显示完整的镜像信息(完整的image id)</p><h3 id="6-2-2-docker-search"><a href="#6-2-2-docker-search" class="headerlink" title="6.2.2. docker search"></a>6.2.2. docker search</h3><p>去 <a href="https://hub.docker.com" target="_blank" rel="noopener">https://hub.docker.com</a> 上查找镜像。(拉下来还是根据自己配置的，如阿里云上拉)</p><blockquote><p>docker search php</p></blockquote><p>在docker官方hub上查找php的镜像后进行罗列。</p><blockquote><p>docker search -s 30 php</p></blockquote><p>在docker官方hub上查找php并且stars超过30的镜像后进行罗列。</p><blockquote><p>docker search –no-trunc php</p></blockquote><p>在docker官方hub上查找php的镜像后进行罗列,将DESCRIPTION完整的显示。</p><blockquote><p>docker search –automated php</p></blockquote><p>在docker官方hub上查找php的镜像后进行罗列,将AUTOMATED是ok的进行显示。</p><h3 id="6-2-3-docker-pull"><a href="#6-2-3-docker-pull" class="headerlink" title="6.2.3. docker pull"></a>6.2.3. docker pull</h3><p>下载镜像</p><blockquote><p>docker pull php</p></blockquote><p>与 docker pull php:latest 相同，下载最新版。</p><blockquote><p>docker pull php:5.6</p></blockquote><p>下载php5.6版本</p><h3 id="6-2-4-docker-rmi"><a href="#6-2-4-docker-rmi" class="headerlink" title="6.2.4. docker rmi"></a>6.2.4. docker rmi</h3><p>删除镜像</p><blockquote><p>docker rmi hello-world</p></blockquote><p>相当于 docker rmi hello-world:3.2 ,删除最新版</p><blockquote><p>docker rmi -f hello-world</p></blockquote><p>强制删除</p><blockquote><p>docker rmi -f 2cb0d9787c4d</p></blockquote><p>根据镜像id进行强制删除</p><blockquote><p>docker rmi -f hello-world nginx php:5.6</p></blockquote><p>强制删除多个，默认删除latest版本</p><blockquote><p>docker rmi -f $(docker images -qa)</p></blockquote><p>强制清空删除所有镜像( $(docker images -qa) 相当于先找出所有的image id，包括中间映像层的，然后一口气全部删除)，是一种组合命令</p><h2 id="6-3-docker容器命令"><a href="#6-3-docker容器命令" class="headerlink" title="6.3. docker容器命令"></a>6.3. docker容器命令</h2><h3 id="6-3-1-docker-run"><a href="#6-3-1-docker-run" class="headerlink" title="6.3.1. docker run"></a>6.3.1. docker run</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> hello-world`</span></span><br></pre></td></tr></table></figure><p>先在本地查找是否有hello-world的镜像，没有再去远程镜像仓库查找。找到了镜像，会创建该镜像的容器出来然后运行。</p><blockquote><p>docker run -it centos</p></blockquote><p>-i 交互模式<br>-t 伪终端</p><p>以交互模式和伪终端模式运行centos。在一个镜像被run后，如果还在再run这个镜像，直接再执行这个命令即可，不会冲突。</p><blockquote><p>docker run -d centos</p></blockquote><p>以守护进程的形式在后台执行。但是，Docker容器后台运行，必须在容器中有一个前台进行的进程，一直挂起，否则docker容器就会自动退出.docker ps 里不会有显示</p><blockquote><p>docker run -d centos /bin/sh -c “while true;do echo hello world;sleep 2;done”</p></blockquote><p>运行容器的时候，同时让容器执行一段shell脚本，这个脚本永远为真，每隔2秒输出一次 “hhello world”.此时docker ps 里会有显示</p><blockquote><p> docker run -it –name mycentos1 centos<br>以交互模式和伪终端模式运行centos,并且取别名为mycentos1</p></blockquote><p>在docker伪终端中</p><blockquote><p>docker run -it -p 8080:80 nginx</p></blockquote><p>以交互模式和伪终端模式运行nginx,此时暴露给宿主机的端口为8080，而docker容器内的端口为80(根据软件原来的端口定义).</p><blockquote><p>docker run -it -P nginx</p></blockquote><p>以交互模式和伪终端模式运行nginx,此时暴露给宿主机的端口是随机分配的，只能自己通过docker ps查看，而docker容器内的端口软件原来的端口定义.</p><p>或者以守护进程的形式启动</p><blockquote><p>docker run -d nginx</p></blockquote><p>无法进入交互可以使用</p><blockquote><p>docker exec -it 11165c51310d /bin/bash </p></blockquote><blockquote><p>exit</p></blockquote><p>代表退出当前docker并且停止，回到原有</p><blockquote><p>ctrl+p+q</p></blockquote><p>代表退出当前docker终端界面回到原有，docker容器后台运行</p><h3 id="6-3-2-docker-ps"><a href="#6-3-2-docker-ps" class="headerlink" title="6.3.2. docker ps"></a>6.3.2. docker ps</h3><blockquote><p>docker ps</p></blockquote><p>(宿主机)列出当前所有正在运行的容器</p><blockquote><p>docker ps -a</p></blockquote><p>列出所有当前+历史所有运行过的容器</p><blockquote><p>docker ps -l</p></blockquote><p>列出最近一次运行过的容器</p><blockquote><p>docker ps -n 3</p></blockquote><p>列出最近三次运行过的容器</p><blockquote><p>docker ps -qa</p></blockquote><p>精简显示所有当前+历史所有运行过的容器的CONTAINER ID</p><h3 id="6-3-3-docker-start"><a href="#6-3-3-docker-start" class="headerlink" title="6.3.3. docker start"></a>6.3.3. docker start</h3><blockquote><p>docker start be2ce65efe84</p></blockquote><p>根据CONTAINER ID，将已经停止的容器重新启动。</p><h3 id="6-3-4-docker-restart"><a href="#6-3-4-docker-restart" class="headerlink" title="6.3.4. docker restart"></a>6.3.4. docker restart</h3><blockquote><p>docker restart feffc090ef3e</p></blockquote><p>根据CONTAINER ID，将已经启动的容器重新启动。此时容器内的文件不会被清除。</p><h3 id="6-3-5-docker-stop"><a href="#6-3-5-docker-stop" class="headerlink" title="6.3.5. docker stop"></a>6.3.5. docker stop</h3><blockquote><p>docker stop feffc090ef3e</p></blockquote><p>根据CONTAINER ID，将已经启动的容器停止(缓慢安全停止)。再启动，所有文件复原。</p><h3 id="6-3-6-docker-kill"><a href="#6-3-6-docker-kill" class="headerlink" title="6.3.6. docker kill"></a>6.3.6. docker kill</h3><blockquote><p>docker kill feffc090ef3e</p></blockquote><p>根据CONTAINER ID，将已经启动的容器停止(立刻马上停)。再启动，所有文件复原。</p><h3 id="6-3-7-docker-rm"><a href="#6-3-7-docker-rm" class="headerlink" title="6.3.7. docker rm"></a>6.3.7. docker rm</h3><blockquote><p>docker rm feffc090ef3e</p></blockquote><p>根据CONTAINER ID，删除容器。</p><blockquote><p>docker rm $(docker ps -q)</p></blockquote><p>删除所有正在运行的容器</p><blockquote><p>docker rm $(docker ps -aq)</p></blockquote><p>删除所有正在运行和已经停止的容器</p><h3 id="6-3-8-重要"><a href="#6-3-8-重要" class="headerlink" title="6.3.8. 重要"></a>6.3.8. 重要</h3><blockquote><p>docker logs -f -t –tail 5 d14363d9eff8</p></blockquote><p>查看指定容器ID内的打印输出,-f 表示从最后开始,-t表示展示时间,–tail 表示一开始展示多少行</p><blockquote><p>docker top d14363d9eff8</p></blockquote><p>查看指定容器ID内的进程</p><blockquote><p>docker inspect d14363d9eff8</p></blockquote><p>查看指定容器ID的内部细节</p><blockquote><p>docker attach d14363d9eff8</p></blockquote><p>进入指定容器ID的正在运行的容器并以交互行模式进行交互.</p><blockquote><p>docker exec -it d14363d9eff8 /bin/bash</p></blockquote><p>进入指定容器ID的正在运行的容器并以交互行模式进行交互.</p><blockquote><p>docker exec -it 6a68ebda9254 ls -al /tmp</p></blockquote><p>返回指定容器ID的正在运行的容器中指定命令内容，但是不进入容器交互中</p><blockquote><p>docker cp 6a68ebda9254:/tmp/yum.log /usr/local</p></blockquote><p>复制指定容器ID的正在运行的容器内的文件到宿主机上</p><h1 id="7-docker镜像原理"><a href="#7-docker镜像原理" class="headerlink" title="7. docker镜像原理"></a>7. docker镜像原理</h1><h2 id="7-1-是什么"><a href="#7-1-是什么" class="headerlink" title="7.1. 是什么"></a>7.1. 是什么</h2><p>Union文件系统是Docker镜像的基础。Union文件系统(UnionFs)是一种分层，轻量级并且高薪更的文件系统。它支持对<code>文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下。</code><br>特征: 一次同时加载多个文件系统，但是从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录。<br>说白了，就是类似与一个<code>同心圆</code>。比如tomcat，最底层是kernel，倒数第二层是centos，倒数第三层是jdk8，最外面一层是tomcat。</p><h2 id="7-2-加载原理"><a href="#7-2-加载原理" class="headerlink" title="7.2. 加载原理"></a>7.2. 加载原理</h2><p>Docker镜像的最底层是bootfs,就是linux系统的引导文件系统，这个是公用的。一般是rootfs不同，代表着kernel内核，比如centos和Ubuntu不同.   </p><h2 id="7-3-特点"><a href="#7-3-特点" class="headerlink" title="7.3. 特点"></a>7.3. 特点</h2><p>Docker镜像都是只读的。<br>当容器启动时，一个新的可写层被加载到镜像的顶部。这一层通常称为“容器层”,”容器层”之下的都叫镜像层。<br>比如 tomcat,tomcat是容器层，jdk8，centos，kernel都是镜像层。</p><h2 id="7-4-docker-commit"><a href="#7-4-docker-commit" class="headerlink" title="7.4. docker commit"></a>7.4. docker commit</h2><p>因为docker的镜像是只读的，不允许修改，如果想修改成自己的。需要做成自己的镜像.</p><blockquote><p>docker commit -m ‘text’ -a ‘guaosi’ ce704066570d guaosi/nginx:1.2</p></blockquote><p>将当前运行的指定容器ID做成新的镜像，可以保存原来容器内修改的文件。-m 是注释 -a 是作者名称 . guaosi/nginx是规范写法,后面需要加上版本号。注意，启动的时候也需要带上这个版本号。</p><h1 id="8-docker容器数据卷"><a href="#8-docker容器数据卷" class="headerlink" title="8. docker容器数据卷"></a>8. docker容器数据卷</h1><h2 id="8-1-能干嘛"><a href="#8-1-能干嘛" class="headerlink" title="8.1. 能干嘛"></a>8.1. 能干嘛</h2><p>卷的设计目的就是数据的持久化，完全独立于容器的生存周期，因此Docker不会在容器删除时删除其挂载的数据卷。</p><h3 id="8-1-1-特点"><a href="#8-1-1-特点" class="headerlink" title="8.1.1. 特点"></a>8.1.1. 特点</h3><ol><li>数据卷可在容器之间共享或重用数据</li><li>卷中的更改可以直接生效</li><li>数据卷中的更改不会包含在镜像的更新中</li><li>数据卷的生命周期一直持续到没有容器使用它为止。</li></ol><h2 id="8-2-作用"><a href="#8-2-作用" class="headerlink" title="8.2. 作用"></a>8.2. 作用</h2><p>容器的持久化 和 容器间继承+共享数据</p><h2 id="8-3-容器内添加数据券"><a href="#8-3-容器内添加数据券" class="headerlink" title="8.3. 容器内添加数据券"></a>8.3. 容器内添加数据券</h2><h3 id="8-3-1-使用-v命令直接添加"><a href="#8-3-1-使用-v命令直接添加" class="headerlink" title="8.3.1. 使用-v命令直接添加"></a>8.3.1. 使用-v命令直接添加</h3><p>添加数据券相当于目录映射,容器开启或者关闭都不会影响到宿主机映射的内容,宿主机与容器实时同步。第一个参数是宿主机要映射的文件夹，第二个参数是容器想要映射的文件夹。</p><blockquote><p>docker run -it -v /myHostFile:/myDockerFile:ro centos</p></blockquote><p>使用交互模式，可读可写添加数据券,2个文件可以不存在,系统会自动创建。此时容器对该文件夹具有可读可写的权限。</p><blockquote><p>docker run -it -v /myHostFile:/myDockerFile centos</p></blockquote><p>使用交互模式，可读添加数据券,2个文件可以不存在,系统会自动创建。此时容器对该文件夹具有可读的权限,无法进行任何写操作。</p><blockquote><p>docker inspect 4744cddb3964</p></blockquote><p>查看容器的详情，可以通过Binds看到对应的映射数据券，RWc查看是否可读可写。true代表可读可写，false代表只可读。</p><h3 id="8-3-2-DockerFile添加"><a href="#8-3-2-DockerFile添加" class="headerlink" title="8.3.2. DockerFile添加"></a>8.3.2. DockerFile添加</h3><p>DockerFile相当于image镜像的源文件</p><p>1.编写DockerFile文件<br>vim DockerFile(文件名随便)<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># volume test</span></span><br><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">"/dataVolumeContainer1"</span>,<span class="string">"/dataVolumeContainer2"</span>]</span></span><br><span class="line"><span class="bash">CMD <span class="built_in">echo</span> <span class="string">"finished,-------success1"</span></span></span><br><span class="line"><span class="bash">CMD /bin/bash</span></span><br></pre></td></tr></table></figure></p><p>意思是集成centos这个镜像后，在容器的根目录下创建了2个数据券共享的文件夹,然后输出字符串，然后结束</p><p>最后的 /bin/bash相当于将<code>docker run -it xxx</code>转为<code>docker run -it xxx /bin/bash</code></p><p>2.构建DockerFile对应的镜像</p><blockquote><p>docker build -f /usr/local/DockerFile -t guaosi/centos .</p></blockquote><p>将编写好的DockerFile通过build命令创建出image镜像,DockerFile需要填写绝对路径，-t 后面写镜像的名称, . 代表镜像具体文件生成在当前目录下</p><p>3.检查</p><p>容器运行刚刚生成的镜像后，通过 <code>docker inspect ff146b4fccd5</code> 可以看到对应的容器数据券,<code>Source</code>字段代表宿主机上所映射的文件夹。宿主机与容器实时同步，可读可写.</p><h3 id="8-3-3-容器间数据共享-DockerFile"><a href="#8-3-3-容器间数据共享-DockerFile" class="headerlink" title="8.3.3. 容器间数据共享(DockerFile)"></a>8.3.3. 容器间数据共享(DockerFile)</h3><p>因为用DockerFile构建的镜像运行的容器，每一次运行宿主机上都会重新生成一个新的映射文件夹与之对应共享数据。此时同一镜像的不同容器想要想要进行数据共享，则需要<code>--volumes-from</code></p><p>测试过程</p><p>1.</p><blockquote><p>docker run -it –name dc01 guaosi/centos</p></blockquote><p>创建一个别名为dc01的guaosi/centos的容器</p><p>2.</p><blockquote><p>docker run -it –name dc02 –volumes-from dc01 guaosi/centos</p></blockquote><blockquote><p>docker run -it –name dc03 –volumes-from dc01 guaosi/centos</p></blockquote><p>创建一个别名为dc02和dc03的guaosi/centos的容器,同时这个容器继承别名为dc01的guaosi/centos容器的数据共享(继承最好是同一个镜像)</p><p>3.此时对dc01容器,dc02容器,dc03容器其中的任意一个进行修改或者删除，其他两个都会同步到，现在这三个容器是实时同步。</p><p>4.如果此时删除dc01容器这个父容器，那么剩下两个子容器依旧可以数据券共享，实时同步，不会有任何影响(包括dc01里的文件也健在)。就算dc04继承dc03然后删除dc03，那么dc04与dc02依旧可以数据共享。</p><p>总结: 容器之间配置信息的传递，数据卷的生命周期一直持续到没有容器使用为止(DockerFile)。</p><h1 id="9-dockerFile"><a href="#9-dockerFile" class="headerlink" title="9. dockerFile"></a>9. dockerFile</h1><h2 id="9-1-dockerfile构建过程解析"><a href="#9-1-dockerfile构建过程解析" class="headerlink" title="9.1. dockerfile构建过程解析"></a>9.1. dockerfile构建过程解析</h2><h3 id="9-1-1-dockerfile内容基础知识"><a href="#9-1-1-dockerfile内容基础知识" class="headerlink" title="9.1.1. dockerfile内容基础知识"></a>9.1.1. dockerfile内容基础知识</h3><p>1.每条保留字指令都必须为大写字母并且后面要跟随至少一个参数</p><p>2.指令按照从上到下，顺序执行</p><p>3.#代表注释</p><p>4.每条指令都会创建一个新的镜像层，并对镜像进行提交。</p><h3 id="9-1-2-docker执行dockerfile的大致流程"><a href="#9-1-2-docker执行dockerfile的大致流程" class="headerlink" title="9.1.2. docker执行dockerfile的大致流程"></a>9.1.2. docker执行dockerfile的大致流程</h3><p>1.docker从基础镜像运行一个容器</p><p>2.执行一条指令并对容器做出修改</p><p>3.执行类型docker commit的操作提交一个新的镜像层</p><p>4.docker再基于刚提交的镜像运行一个新容器</p><p>5.执行dockerfile的下一条指令直到所有指令都执行完。</p><h2 id="9-2-dockerfile体系结构-保留字指令"><a href="#9-2-dockerfile体系结构-保留字指令" class="headerlink" title="9.2. dockerfile体系结构(保留字指令)"></a>9.2. dockerfile体系结构(保留字指令)</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span>  基础镜像，当前新镜像是基于哪个镜像的</span><br><span class="line"><span class="keyword">MAINTAINER</span>  镜像维护者的姓名和邮箱地址</span><br><span class="line"><span class="keyword">RUN</span><span class="bash">  容器构建时需要运行的命令(容器中执行Linux的命令)</span></span><br><span class="line"><span class="bash">EXPOSE  当前容器对外暴露出的端口</span></span><br><span class="line"><span class="bash">WORKDIR  指定在创建容器之后，终端默认登陆进来的工作目录，一个落脚点</span></span><br><span class="line"><span class="bash">ENV  用来在构建镜像过程中设置环境变量，相当于是设定了变量，方便调用使用</span></span><br><span class="line"><span class="bash">ADD 将宿主机目录下的文件拷贝进镜像并且ADD会自动处理URL和解压tar压缩包</span></span><br><span class="line"><span class="bash">COPY  类似ADD，拷贝文件和目录到镜像中，但是不会自动解压。将从构建上下文目录中&lt;源路径&gt;的文件/目录复制到新的一层的镜像内&lt;目标路径&gt;位置</span></span><br><span class="line"><span class="bash">VOLUME  容器数据卷，用于数据保存和持久化工作</span></span><br><span class="line"><span class="bash">CMD  指定一个容器启动时要运行的命令，dockerfile中可以有多个CMD指令，构建时CMD都会运行。但是docker run时只有最后一个命令生效，并且CMD会被docker run之后的命令参数替代。(命令执行在容器)</span></span><br><span class="line"><span class="bash">ENTRYPOINT  指定一个容器启动时要运行的命令 ENTRYPOINT的目的和CMD一样，都是在指定容器启动程序及参数。ENTRYPOINT不会被docker run之后的命令参数替代，而是会被做成附加参数执行(命令执行在容器)</span></span><br><span class="line"><span class="bash">ONBUILD  当构建一个被继承的Dockerfile时运行命令，父镜像在被子镜像继承后，此时父镜像的onbuild被触发</span></span><br></pre></td></tr></table></figure><h2 id="9-3-案例"><a href="#9-3-案例" class="headerlink" title="9.3. 案例"></a>9.3. 案例</h2><h3 id="9-3-1-查看构建历史"><a href="#9-3-1-查看构建历史" class="headerlink" title="9.3.1. 查看构建历史"></a>9.3.1. 查看构建历史</h3><blockquote><p>docker history 镜像id</p></blockquote><h3 id="9-3-2-自定义镜像1-FROM-MAINTAINER-ENV-WORKDIR-RUN-EXPOSE"><a href="#9-3-2-自定义镜像1-FROM-MAINTAINER-ENV-WORKDIR-RUN-EXPOSE" class="headerlink" title="9.3.2. 自定义镜像1(FROM,MAINTAINER,ENV,WORKDIR,RUN,EXPOSE)"></a>9.3.2. 自定义镜像1(FROM,MAINTAINER,ENV,WORKDIR,RUN,EXPOSE)</h3><ol><li>编写dockerfile文件</li></ol><p>vim  myCentosDockerFile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">MAINTAINER</span> guaosi&lt;guaosi@vip.qq.com&gt;</span><br><span class="line"><span class="keyword">ENV</span> MYPATH /usr/local</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="bash">RUN yum -y install vim</span></span><br><span class="line"><span class="bash">RUN yum -y install net-tools</span></span><br><span class="line"><span class="bash">EXPOSE 80</span></span><br><span class="line"><span class="bash">CMD <span class="built_in">echo</span> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="bash">CMD <span class="built_in">echo</span> <span class="string">"success---------------ok"</span></span></span><br><span class="line"><span class="bash">CMD /bin/bash</span></span><br></pre></td></tr></table></figure><ol start="2"><li>构建镜像</li></ol><blockquote><p>docker build -f /usr/local/myCentosDockerFile -t guaosi/centos:1.5 /usr/local/MyCenntos/</p></blockquote><ol start="3"><li>运行容器</li></ol><blockquote><p>docker run -it guaosi/centos:1.5</p></blockquote><h3 id="9-3-3-自定义镜像2-CMD-ENTRYPOINT"><a href="#9-3-3-自定义镜像2-CMD-ENTRYPOINT" class="headerlink" title="9.3.3. 自定义镜像2(CMD,ENTRYPOINT)"></a>9.3.3. 自定义镜像2(CMD,ENTRYPOINT)</h3><ol><li>编写dockerfile文件</li></ol><p>vim  myCentosIp</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum install -y curl</span></span><br><span class="line"><span class="bash">CMD [<span class="string">"curl"</span>,<span class="string">"-s"</span>,<span class="string">"http://ip.cn"</span>]</span></span><br><span class="line"><span class="bash">//或者</span></span><br><span class="line"><span class="bash">ENTRYPOINT [<span class="string">"curl"</span>,<span class="string">"-s"</span>,<span class="string">"http://ip.cn"</span>]</span></span><br></pre></td></tr></table></figure><ol start="2"><li>构建镜像</li></ol><blockquote><p>docker build -f /usr/local/myCentosIp -t guaosi/Ip:1.0 /usr/local/MyCenntos/</p></blockquote><ol start="3"><li>运行容器</li></ol><blockquote><p>docker run -it guaosi/Ip:1.0 -i</p></blockquote><p>CMD的不能追加参数，比如想再加一个 <code>-i</code> ,追加了会导致都被换掉，而ENTRYPOINT可以正确追加参数</p><h3 id="9-3-4-自定义镜像3-ONBUILD"><a href="#9-3-4-自定义镜像3-ONBUILD" class="headerlink" title="9.3.4. 自定义镜像3(ONBUILD)"></a>9.3.4. 自定义镜像3(ONBUILD)</h3><ol><li>编写dockerfile文件(父)</li></ol><p>vim  myCentosFather</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum install -y curl</span></span><br><span class="line"><span class="bash">ONBUILD RUN <span class="built_in">echo</span> <span class="string">"father is extended"</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>构建镜像</li></ol><blockquote><p>docker build -f /usr/local/myCentosFather -t guaosi/father:1.0 /usr/local/MyCenntos/</p></blockquote><ol start="3"><li>编写dockerfile文件(子)</li></ol><p>vim myCentosSon</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> guaosi/son</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum install -y curl</span></span><br></pre></td></tr></table></figure><ol start="4"><li>构建镜像</li></ol><blockquote><p>docker build -f /usr/local/myCentoSson -t guaosi/son:1.0 /usr/local/MyCenntos/</p></blockquote><h1 id="10-上传镜像到阿里云"><a href="#10-上传镜像到阿里云" class="headerlink" title="10. 上传镜像到阿里云"></a>10. 上传镜像到阿里云</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker login --username=guaosi@vip<span class="selector-class">.qq</span><span class="selector-class">.com</span> registry<span class="selector-class">.cn-shenzhen</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span></span><br><span class="line">$ sudo docker tag [ImageId] registry<span class="selector-class">.cn-shenzhen</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/guaosi/mycentos:[镜像版本号]</span><br><span class="line">$ sudo docker push registry<span class="selector-class">.cn-shenzhen</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/guaosi/mycentos:[镜像版本号]</span><br></pre></td></tr></table></figure><p>ImageId 是镜像ID，镜像版本号是自己设定的版本号</p><p>示例</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker login --username=guaosi@vip<span class="selector-class">.qq</span><span class="selector-class">.com</span> registry<span class="selector-class">.cn-shenzhen</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span></span><br><span class="line">docker tag <span class="number">1309</span>e6c731d8 registry<span class="selector-class">.cn-shenzhen</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/guaosi/mycentos:<span class="number">1.5</span></span><br><span class="line">docker push registry<span class="selector-class">.cn-shenzhen</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/guaosi/mycentos:<span class="number">1.5</span></span><br></pre></td></tr></table></figure><p>上传成功后，可以搜索得到</p><p>下载验证</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry<span class="selector-class">.cn-shenzhen</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/guaosi/mycentos:<span class="number">1.5</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-docker用来干什么&quot;&gt;&lt;a href=&quot;#1-docker用来干什么&quot; class=&quot;headerlink&quot; title=&quot;1. docker用来干什么&quot;&gt;&lt;/a&gt;1. docker用来干什么&lt;/h1&gt;&lt;p&gt;将做好的环境和代码，打包成镜像，可以让各个地方都可以直接使用，不再受到环境的限制。&lt;/p&gt;
&lt;h1 id=&quot;2-docker与虚拟机的区别&quot;&gt;&lt;a href=&quot;#2-docker与虚拟机的区别&quot; class=&quot;headerlink&quot; title=&quot;2. docker与虚拟机的区别&quot;&gt;&lt;/a&gt;2. docker与虚拟机的区别&lt;/h1&gt;&lt;p&gt;1.虚拟机是模拟整个操作系统，包括硬件部分&lt;br&gt;2.docker是使用linux容器，通过进程隔离，拥有自己的文件系统，不会跟宿主机产生错乱。&lt;br&gt;3.docker没有自己的内核，使用的是宿主机的内核。&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://www.guaosi.com/tags/docker/"/>
    
  </entry>
  
</feed>
